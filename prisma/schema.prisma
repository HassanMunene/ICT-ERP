// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Shared Enums
enum UserStatus { 
  ACTIVE
 INACTIVE 
 SUSPENDED 
 }
 
enum LeaveStatus { 
  PENDING 
  APPROVED 
  REJECTED 
  }
enum AttendanceStatus { 
  PRESENT 
  ABSENT 
  LATE 
  REMOTE 
  HOLIDAY 
  }

model User{
  id String  @id @default(cuid())
  email String @unique
  passwordHash   String
  firstName      String
  lastName       String
  status         UserStatus  @default(ACTIVE)
  departmentId   String?     
  department     Department? @relation(fields: [departmentId], references: [id])
  // profiles
  employee       Employee?
  contractor     Contractor?
  marketer       Marketer?
  // RBAC
  userRoles      UserRole[]
  // cross-module ownership/assigned-to
  tasks          Task[]           @relation("TaskAssignees")
  timeLogs       Timelog[]
  attendance     Attendance[]
  leaveRequests  LeaveRequest[]
  payouts        Payout[]
  opportunities  Opportunity[]    @relation("OpportunityOwner")
  leads          Lead[]           @relation("LeadOwner")
  contacts       Contact[]        @relation("ContactOwner")
  companies      Company[]        @relation("CompanyAccountMgr")
  comms          CommunicationLog[] @relation("CommAuthor")
  // docs & notifications
  notifications  Notification[]
  createdAt      DateTime    @default(now())
  updatedAt      DateTime    @updatedAt
  @@index([departmentId])
}

